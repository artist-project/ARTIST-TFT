/*******************************************************************************
 * Copyright (c) 2014 Atos.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 * 	Burak Karaboga (Atos) - main development
 * 	Initially developed in the context of ARTIST EU project www.artist-project.eu
 *******************************************************************************/
package eu.artist.tft

//import java.util.List;
//import eu.artist.premigration.tft.tft.model.MigrationGoals;
//import eu.artist.premigration.tft.tft.model.TechnicalGoals;
import eu.artist.premigration.tft.tft.model.Component;
import eu.artist.premigration.tft.tft.model.migrationstrategy.MigrationStrategy;
import eu.artist.premigration.tft.tft.model.migrationstrategy.MigrationStrategyContainer;
import eu.artist.premigration.tft.tft.model.migrationstrategy.Category;
import eu.artist.premigration.tft.tft.model.migrationstrategy.Complexity;

//declare any global variables here
global eu.artist.premigration.tft.tft.model.Component updatedComponent;


//////////	TODO: 
/////////	1 - Complexity assignments should be handled properly. A deeper analysis should be made, or complexity assignments should be done in a seperate rule file. To be discussed.

rule "HasMigrationStrategyOfCategoryData"
	
    when
    	$component : Component ( this.hasMigrationStrategyOfCategory(Category.DATA)) && eval(updatedComponent.hasMigrationStrategyOfCategory(Category.DATA))
    then
    	MigrationStrategy componentStrategy = $component.getMigrationStrategyOfCategory(Category.DATA);
    	MigrationStrategy updatedComponentStrategy = updatedComponent.getMigrationStrategyOfCategory(Category.DATA);
    	
    	if (!updatedComponentStrategy.equals(componentStrategy.getId())){
    		MigrationStrategy newStrategy = MigrationStrategyContainer.INSTANCE.getMigrationStrategy(updatedComponentStrategy.getId());
	        newStrategy.setComplexity(componentStrategy.getComplexity());
	        newStrategy.setSuggested(true);
	        
	        $component.getMigrationStrategies().remove(componentStrategy);
	        $component.getMigrationStrategies().add(newStrategy);
    	}
end

rule "HasMigrationStrategyOfCategoryFramework"
	
    when
    	$component : Component ( this.hasMigrationStrategyOfCategory(Category.FRAMEWORK)) && eval(updatedComponent.hasMigrationStrategyOfCategory(Category.FRAMEWORK))
    then
    	MigrationStrategy componentStrategy = $component.getMigrationStrategyOfCategory(Category.FRAMEWORK);
    	MigrationStrategy updatedComponentStrategy = updatedComponent.getMigrationStrategyOfCategory(Category.FRAMEWORK);
    	
    	if (!updatedComponentStrategy.equals(componentStrategy.getId())){
    		MigrationStrategy newStrategy = MigrationStrategyContainer.INSTANCE.getMigrationStrategy(updatedComponentStrategy.getId());
	        newStrategy.setComplexity(componentStrategy.getComplexity());
	        newStrategy.setSuggested(true);
	        
	        $component.getMigrationStrategies().remove(componentStrategy);
	        $component.getMigrationStrategies().add(newStrategy);
    	}
end

rule "HasMigrationStrategyOfCategoryView"
	
    when
    	$component : Component ( this.hasMigrationStrategyOfCategory(Category.VIEW)) && eval(updatedComponent.hasMigrationStrategyOfCategory(Category.VIEW))
    then
    	MigrationStrategy componentStrategy = $component.getMigrationStrategyOfCategory(Category.VIEW);
    	MigrationStrategy updatedComponentStrategy = updatedComponent.getMigrationStrategyOfCategory(Category.VIEW);
    	
    	if (!updatedComponentStrategy.equals(componentStrategy.getId())){
    		MigrationStrategy newStrategy = MigrationStrategyContainer.INSTANCE.getMigrationStrategy(updatedComponentStrategy.getId());
	        newStrategy.setComplexity(componentStrategy.getComplexity());
	        newStrategy.setSuggested(true);
	        
	        $component.getMigrationStrategies().remove(componentStrategy);
	        $component.getMigrationStrategies().add(newStrategy);
    	}
end
